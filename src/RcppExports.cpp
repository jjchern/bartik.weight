// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// ComputeAlphaBeta
List ComputeAlphaBeta(const arma::vec y, const arma::vec x, const arma::mat WW, const arma::mat weight, const arma::mat Z, const arma::vec G);
RcppExport SEXP _bartik_weight_ComputeAlphaBeta(SEXP ySEXP, SEXP xSEXP, SEXP WWSEXP, SEXP weightSEXP, SEXP ZSEXP, SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type WW(WWSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeAlphaBeta(y, x, WW, weight, Z, G));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bartik_weight_ComputeAlphaBeta", (DL_FUNC) &_bartik_weight_ComputeAlphaBeta, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_bartik_weight(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
